package myArrayList;

import java.util.Arrays;

public class MyArrayList{
    private int[] integerArray = null;
    int current_size=0;
    int max_size=50;

    //Constructor to initialize private data member
    public MyArrayList(){
	integerArray = new int[max_size];
    }

    //Method to sort array in ascending order
   public void sort_array(){
       Arrays.sort(integerArray, 0, current_size);
    }
    
    //Method to insert new value into the array and keep it sorted
    public void insertSorted(int newValue){
    	if(current_size < max_size){
	    current_size++;
	    integerArray[current_size-1] = newValue;
	}
	else{
	    //Use Ceil, Round or Floor
	    max_size = max_size + (Math.round(max_size/2));
	    int[] newIntegerArray = new int[max_size];
	    for(int i = 0; i < current_size; i++){
		newIntegerArray[i] = integerArray[i];
	    }
	    integerArray = newIntegerArray;
	    current_size++;
            integerArray[current_size - 1] = newValue;
	    sort_array();
	}
    }

    //Method to remove the given value from the array and keep it sorted
    public void removeValue(int value){
	for(int i=0; i<current_size; i++){
	    if(integerArray[i] == value){
		for(int j=index; j<current_size-1; j++){
		    integerArray[j] = integer_array[j+1];
		}
		integerArray[current_size-1] = 0;
		current_size--;
	    }	
	}
    }
    
    public int intIndexOf(int value){
	for(int i=0; i<current_size; i++){
	    if(integerArray[i] == value){
		return i;
	    }
	}
	return -1;
    }

    public int size(){
	return current_size;
    }

    public int sum(){
	int sum = 0;
	for(int i=0; i<current_size; i++){
	    sum = sum + integerArray[i];
	}
	return sum;
    }

    public void initialize(){
	this.current_size = 0;
	this.max_size = 50;
	this.integerArray = new int[max_size];
    }
}
